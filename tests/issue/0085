#!/bin/bash
set -e

tmp=$(mktemp -d)
trap 'rm -rf -- "$tmp"' EXIT
tmp_uid=custom-$RANDOM

cat >"$tmp"/pacman.conf <<EOF
[options]
CacheDir = $tmp
HoldPkg = pacman-git glibc
Architecture = auto
CheckSpace
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[$tmp_uid]
SigLevel = Optional TrustAll
Server = file://$tmp
EOF

# create local repository
aur repo --root "$tmp" --repo "$tmp_uid" --init

# create temporary pacman database
mkdir -p "$tmp"/pacman/{local,sync}

# cache/checksum test
cat > "$tmp"/PKGBUILD <<EOF
pkgname=test-random
pkgver=1
pkgrel=1
pkgdesc="description"
arch=('any')
url="http://example.com"
license=('GPL')

package() {
    install -dm1777 "\$pkgdir"/tmp
    install -dm0700 "\$pkgdir"$tmp
    dd if=/dev/urandom of="\$pkgdir"$tmp/random bs=1M count=4
}
EOF

cat "$tmp"/PKGBUILD
# TODO: add test with pkgver bumps (no CacheDir)
i=0

while [ $((i < 10)) -eq 1 ]; do
    env -C "$tmp" -u AUR_REPO -u AUR_DBROOT -u AUR_DBEXT -u MAKEPKG AUR_ENV=/dev/null aur build \
        --no-sync -fd "$tmp_uid" --pacman-conf "$tmp"/pacman.conf

    fakeroot pacsync --config "$tmp"/pacman.conf --dbpath "$tmp"/pacman
    # XXX: results in "could not change the root directory", however
    # this does not seem to affect the result of the test
    fakeroot pacman -S --noconfirm --dbpath "$tmp"/pacman \
             --config "$tmp"/pacman.conf "$tmp_uid"/test-random

    i=$((i +1))
done

# vim: set et sw=4 sts=4 ft=sh:\n
