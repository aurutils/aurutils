#!/bin/bash
set -e

tmp=$(mktemp -d)
trap 'rm -rf -- "$tmp"' EXIT
tmp_uid=custom-$RANDOM

cat >"$tmp"/pacman.conf <<EOF
[options]
HoldPkg = pacman-git glibc
Architecture = auto
CheckSpace
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[community]
Include = /etc/pacman.d/mirrorlist
[$tmp_uid]
SigLevel = Optional TrustAll
Server = file://$tmp
EOF

cat >"$tmp"/PKGBUILD <<EOF
pkgname=foo
pkgver=1
pkgrel=1
arch=('any')

package() {
    true
}
EOF

# create local repository
aur repo --root "$tmp" --repo "$tmp_uid" --init

# issue 714: select repository without -d or --root
# TODO: use --dbpath to avoid privilege escalation
env -C "$tmp" -u AUR_REPO -u AUR_DBROOT -u AUR_DBEXT -u MAKEPKG AUR_ENV=/dev/null \
    aur build --no-sync --pacman-conf "$tmp"/pacman.conf

fakeroot -- pacman --config "$tmp"/pacman.conf --dbpath "$tmp" -Sy
pacman --config "$tmp"/pacman.conf --dbpath "$tmp" -Si "$tmp_uid"/foo

# vim: set et sw=4 sts=4 ft=sh:\n
