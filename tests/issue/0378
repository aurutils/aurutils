#!/bin/bash
set -e

tmp1=$(mktemp -d)
tmp1_uid=custom-$RANDOM-1
tmp2=$(mktemp -d)
tmp2_uid=custom-$RANDOM-2
tmp3=$(mktemp -d)
tmp3_uid=custom-$RANDOM-3
trap 'rm -rf -- "$tmp1" "$tmp2" "$tmp3"' EXIT

cat >"$tmp1"/pacman.conf <<EOF
[options]
HoldPkg = pacman-git glibc
Architecture = auto
CheckSpace
[core]
Include = /etc/pacman.d/mirrorlist
[extra]
Include = /etc/pacman.d/mirrorlist
[$tmp1_uid]
SigLevel = Optional TrustAll
Server = file://$tmp1
[$tmp2_uid]
SigLevel = Optional TrustAll
Server = file://$tmp2
[$tmp3_uid]
SigLevel = Optional TrustAll
Server = file://$tmp3
EOF

# create local repository
aur repo --root "$tmp1" --repo "$tmp1_uid" --init
aur repo --root "$tmp2" --repo "$tmp2_uid" --init
aur repo --root "$tmp3" --repo "$tmp3_uid" --init

# issue 378: repository selection with AUR_REPO
{ IFS=: read -r _ repo
  IFS=: read -r _ root
  IFS=: read -r _ path
} < <(env - AUR_REPO="$tmp1_uid" aur repo --status --config "$tmp1"/pacman.conf)
[[ $repo == "$tmp1_uid" ]]

{ IFS=: read -r _ repo
  IFS=: read -r _ root
  IFS=: read -r _ path
} < <(env - AUR_REPO="$tmp2_uid" aur repo --status --config "$tmp1"/pacman.conf)
[[ $repo == "$tmp2_uid" ]]

{ IFS=: read -r _ repo
  IFS=: read -r _ root
  IFS=: read -r _ path
} < <(env - AUR_REPO="$tmp3_uid" aur repo --status --config "$tmp1"/pacman.conf)
[[ $repo == "$tmp3_uid" ]]
